/实现qsort函数
#include<stdio.h>

void swap(char* a, char* b,int width)
{
	int i = 0;
	for (i = 0; i < width; i++)//交换width字节内容
	{
		char tmp = 0;
		tmp = *a;
		*a = *b;
		*b = tmp;
		a++; b++;
	}
}
void My_Sort(void* arr, int sz, int width, int(*cmp)(const void* a, const void* b))//通用冒泡排序
{//参数有数组指针，数组长度，元素宽度（字节），对比函数指针
	int i = 0;
	for ( i=0; i < sz - 1; i++)//sz-1次冒泡排序
	{
		for (int j = 0; j < sz - 1-i; j++)//每次冒泡排序,排序sz-1-i个数
		{
			if (cmp((char*)arr + width * j, (char*)arr + width * (j+1)) > 0)//(char*)arr+width*j
			{
				swap((char*)arr + width * j, (char*)arr + width * (j + 1), width);
			}
		}
	}
}
int Cmp_Int(const void* a, const void* b)
{
	return *(int*)a - *(int*)b;
}
void INT()
{
	int arr[] = { 9,8,7,6,5,4,3,2,1,0 };//用自己写的函数升序排列
	int sz = sizeof(arr) / sizeof(arr[0]);
	My_Sort(arr, sz, sizeof(arr[0]), Cmp_Int);
}
int Cmp_float(const void* a, const void* b)
{
	return (int)(*(float*)a) - (int)(*(float*)b);
}

void FLOAT()
{
	float arr[] = { 9.5,8.6,7.3,6.2,5.1,4.0,3.9,2.8,1.7,0 };
	int sz = sizeof(arr) / sizeof(arr[0]);
	My_Sort(arr, sz, sizeof(arr[0]), Cmp_float);
	for (int i = 0; i < sz; i++)
	{
		printf("%fl ", arr[i]);
	}
}

int main()
{

	FLOAT();
	return 0;
}
