#include<stdio.h>
#include<malloc.h>
#include<math.h>
#include<limits.h>
int reverse(int x) {
	int count = 0;
	for (int y = x; y != 0; y = y / 10)
	{
		count++;
	}
	char* str = (char*)malloc(count);
	int left = 0;
	int right = count - 1;
	for (int y = x; y != 0; y = y / 10,right--)
	{
		int mod = y % 10;
		str[right] = (char)mod + '0';
	}

	for (right=count-1; left < right; left++, right--)
	{
		char tmp = str[left];
		str[left] = str[right];
		str[right] = tmp;
	}
	left = 0;
	while (!str[left])
	{
		left++;
	}
	int start = left;
	int value = 0;
	int weight = 1;
	for (right = count-1; right >= start; right--, weight=weight * 10)
	{
		
		value = value + ((int)(str[right] - '0')) * weight;
		if (((int)(str[right] - '0')) > INT_MAX / (weight*10) || ((int)(str[right] - '0')) < INT_MIN / (weight * 10))
			return 0;
	}
	
	return value;
}
int main()
{
	reverse(-2147483412);
	return 0;
}
//看到答案我吐了
int reverse(int x) {
    int rev = 0;
    while (x != 0) {
        if (rev < INT_MIN / 10 || rev > INT_MAX / 10) {
            return 0;
        }
        int digit = x % 10;
        x /= 10;
        rev = rev * 10 + digit;
    }
    return rev;
}
