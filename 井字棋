#define ROW 3
#define COL 3
#include<stdio.h>
#include<stdlib.h>
#include<time.h>
//声明
void start(char cheese[ROW][COL], int row, int col);
void printboard(char cheese[ROW][COL], int row, int col);
void game(char cheese[ROW][COL], int row, int col);
void clean(char cheese[ROW][COL], int row, int col);
void playermove(char cheese[ROW][COL], int row, int col);
void computermove(char cheese[ROW][COL], int row, int col);
char ifwin(char cheese[ROW][COL], int row, int col, int playersteps, int computersteps);
#define _CRT_SECURE_NO_WARNINGS 1
#include"game.h"
void game(char cheese[ROW][COL], int row, int col)
{
	clean(cheese, ROW, COL);//初始化
	printboard(cheese, ROW, COL);//打印棋盘
	do
	{
		int i = 0;
		int j = 0;
		char ret = 0;
		playermove(cheese, ROW, COL);//玩家走
		i++;
		ret = ifwin(cheese, ROW, COL, i, j);//判断输赢
		if (ret == '*')
		{
			printf("玩家赢\n");
			break;
		}
		if (ret == '#')
		{
			printf("电脑赢\n");
			break;
		}
		if (ret == '=')
		{
			printf("平局\n");
			break;
		}
		else;
		printboard(cheese, ROW, COL);//打印棋盘
		computermove(cheese, ROW, COL);//电脑走
		j++;
		ret=ifwin(cheese, ROW, COL, i, j);//判断输赢
		if (ret == '*')
		{
			printf("玩家赢\n");
			break;
		}
		if (ret == '#')
		{
			printf("电脑赢\n");
			break;
		}
		if (ret == '=')
		{
			printf("平局\n");
			break;
		}
		else;
		printboard(cheese, ROW, COL);//打印棋盘
	} while (1);//1.玩家赢2.电脑赢3.平局4.继续
}
void menu()
{
	printf("***********三子棋**********\n");
	printf("***1.开始游戏 0.结束游戏***\n");
	printf("***************************\n");
}
void start(char cheese[ROW][COL], int row, int col)
{
	int n = 0;
	do
	{
		menu();
		printf("请输入->\n");
		scanf("%d", &n);
		switch (n)
		{
		case 1:
			game(cheese, ROW, COL);
			break;
		case 0:
			break;
		default:
			printf("请重新输入\n");
			break;
		}
	} while (n);
}
void clean(char cheese[ROW][COL], int row, int col)
{
	int i = 0;
    int j = 0;
	for (i = 0; i < row; i++)
	{
		for (j = 0; j < col; j++)
			cheese[i][j] = ' ';
	}
}
void printboard(char cheese[ROW][COL], int row, int col)
{
	int i = 0;
	int j = 0;
	
	for (i = 0; i < row; i++)
	{
		for (j = 0; j < col; j++)
		{
			printf(" %c ", cheese[i][j]);//打印元素行
			if (j < col - 1)
				printf("|");
		}
		printf("\n");
		if(i<row-1)
		{ 
			for (j = 0; j < col; j++)
			{
				printf("---");//打印分割行
				if (j < col - 1)
					printf("|");
			}
			printf("\n");
		}
	}
}
void playermove(char cheese[ROW][COL], int row, int col)
{
	int x = 0;
	int y = 0;
	while (1)
	{
		printf("玩家走-坐标（x,x）\n");
		scanf("%d %d", &x, &y);//把玩家输入的坐标带入
		if (cheese[x-1][y-1] == ' ')
		{
			cheese[x-1][y-1] = '*';
			break;
		}
		else
			printf("错误，请重试。\n");
	}
}
void computermove(char cheese[ROW][COL], int row, int col)
{
	printf("电脑走\n");
	int i = 0;
	int j = 0;
	while (1)
	{
		i = rand() % row;
		j = rand() % col;
		if (cheese[i][j] == ' ')
		{
			cheese[i][j] = '#';
			break;
		}
	}
}
char ifwin(char cheese[ROW][COL], int row, int col,int playersteps,int computersteps)
{
	//判断每排或者每列或者斜向全部元素相同
	int i = 0; int j = 0; int num = 0; int allsteps = playersteps + computersteps;//总步数
	for (i = 0; i < row; i++)//看横排是否全相同，如果是返回相同的那个字符。
	{
		if (cheese[i][0] != ' ')
		{
			for (j = 1, num = 0; j < col; j++)
			{
				if (cheese[i][0] == cheese[i][j])
					num++;
			}
			if (num == col - 1)
				return cheese[i][0];
		}
	}
	for (j = 0; j < col; j++)//看纵排是否全相同，如果是返回相同的那个字符。
	{
		if (cheese[0][j] != ' ')
		{
			for (i = 1, num = 0; i < row; i++)
			{
				if (cheese[0][j] == cheese[i][j])
					num++;
			}
			if (num == row - 1)
				return cheese[0][j];
		}
	}
	if (cheese[0][0]!=' '&&cheese[0][0] == cheese[1][1] && cheese[1][1] == cheese[2][2])
		return cheese[1][1];
	if (cheese[0][2] != ' ' && cheese[0][2] == cheese[1][1] && cheese[1][1] == cheese[2][0])
		return cheese[1][1];
	if (allsteps == row * col)
		return '=';
	else
		return '~';
}
#define _CRT_SECURE_NO_WARNINGS 1
#include"game.h"

int main()
{
	srand((unsigned int)time(NULL));//生成随机数
	char cheese[ROW][COL] = { 0 };//建立一个row行col列的数组对应棋盘
	start(cheese,ROW,COL);//开始游戏


	return 0;
}
